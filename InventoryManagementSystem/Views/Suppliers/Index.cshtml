@{
    ViewBag.Title = "Suppliers";
}

<!-- Toast container (top-right) -->
<div class="position-fixed top-0 end-0 p-3" style="z-index: 1100">
    <div id="actionToast" class="toast align-items-center border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body" id="toastMessage"></div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>

<div class="container mt-5">

    <div class="d-flex justify-content-between align-items-center mb-4 p-3 bg-light rounded shadow-sm border">
        <h2 class="fw-bold text-primary mb-0">
            <i class="bi bi-people-fill me-2"></i> Suppliers List
        </h2>
        <button id="btnAddSupplier" class="btn btn-success shadow-sm px-4">
            <i class="bi bi-plus-circle me-1"></i> Add Supplier
        </button>
    </div>

    <div class="card shadow-sm">
        <div class="card-body p-3">
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered mb-0" id="supplierTable">
                    <thead class="table-dark">
                        <tr>
                            <th class="text-center">Name</th>
                            <th class="text-center">Email</th>
                            <th class="text-center">Mobile</th>
                            <th class="text-center">Address</th>
                            <th class="text-center">Is Active</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Filled via AJAX -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Add/Edit Modal -->
<div class="modal fade" id="supplierModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content shadow-sm">
            <form id="supplierForm" class="p-3">
                <div class="modal-header border-0">
                    <h5 class="modal-title" id="modalTitle">Add Supplier</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="supplierId" />
                    <div class="mb-3">
                        <label for="Name" class="form-label">Name</label>
                        <input type="text" id="Name" class="form-control" placeholder="Enter name" />
                    </div>
                    <div class="mb-3">
                        <label for="Email" class="form-label">Email</label>
                        <input type="email" id="Email" class="form-control" placeholder="Enter email" />
                    </div>
                    <div class="mb-3">
                        <label for="Mobile" class="form-label">Mobile</label>
                        <input type="text" id="Mobile" class="form-control" placeholder="Enter mobile number" />
                    </div>
                    <div class="mb-3">
                        <label for="Address" class="form-label">Address</label>
                        <input type="text" id="Address" class="form-control" placeholder="Enter address" />
                    </div>
                </div>
                <div class="modal-footer border-0">
                    <button type="button" id="btnSaveSupplier" class="btn btn-success">
                        <i class="bi bi-save"></i> Save
                    </button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> Close
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteSupplierModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content shadow-sm">
            <div class="modal-header border-0">
                <h5 class="modal-title text-danger">Delete Supplier</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this supplier?</p>
            </div>
            <div class="modal-footer border-0">
                <button type="button" id="btnConfirmDeleteSupplier" class="btn btn-danger">
                    <i class="bi bi-trash"></i> Delete
                </button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle"></i> Cancel
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Supplier Details Modal -->
<div class="modal fade" id="supplierDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content shadow">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title">Supplier Details</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p><strong>Name:</strong> <span id="detailName"></span></p>
                <p><strong>Email:</strong> <span id="detailEmail"></span></p>
                <p><strong>Mobile:</strong> <span id="detailMobile"></span></p>
                <p><strong>Address:</strong> <span id="detailAddress"></span></p>
                <p><strong>Created At:</strong> <span id="detailCreatedAt"></span></p>
                <p><strong>Created By:</strong> <span id="detailCreatedBy"></span></p>
                <p><strong>Updated At:</strong> <span id="detailUpdatedAt"></span></p>
                <p><strong>Updated By:</strong> <span id="detailUpdatedBy"></span></p>
                <p><strong>Is Active:</strong> <input type="checkbox" id="detailIsActive" disabled></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary shadow-sm" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@section scripts {
    <script>
        let deleteSupplierId = 0;

        // Open modal for adding a new supplier
        function openAddSupplierModal() {
            $('#supplierModalTitle').text('Add Supplier');
            $('#supplierId').val(0);
            $('#Name').val('');
            $('#Email').val('');
            $('#Mobile').val('');
            $('#Address').val('');
            var modal = new bootstrap.Modal(document.getElementById('supplierModal'));
            modal.show();
        }

        // Open modal for editing an existing supplier
        function openEditSupplierModal(id, name, email, mobile, address) {
            $('#supplierModalTitle').text('Edit Supplier');
            $('#supplierId').val(id);
            $('#Name').val(name);
            $('#Email').val(email);
            $('#Mobile').val(mobile);
            $('#Address').val(address);
            var modal = new bootstrap.Modal(document.getElementById('supplierModal'));
            modal.show();
        }

        // Open confirmation modal for deleting a supplier
        function openDeleteSupplierModal(id) {
            deleteSupplierId = id;

            $.get('/Suppliers/CheckSupplierProducts/' + id, function(res) {
                var modalEl = document.getElementById('deleteSupplierModal');
                var modalBody = modalEl.querySelector('.modal-body p');
                var confirmBtn = modalEl.querySelector('#btnConfirmDeleteSupplier');

                if (!modalEl.modalInstance) modalEl.modalInstance = new bootstrap.Modal(modalEl);

                if (res.productCount > 0) {
                    modalBody.innerHTML = `This supplier has ${res.productCount} products.<br>
                        You can mark the supplier inactive or delete products first.`;
                    confirmBtn.innerText = "Mark Inactive";
                    confirmBtn.classList.remove('btn-danger');
                    confirmBtn.classList.add('btn-warning');
                    confirmBtn.onclick = function() { markSupplierInactive(deleteSupplierId); };
                } else {
                    modalBody.innerText = "Are you sure you want to delete this supplier?";
                    confirmBtn.innerText = "Delete";
                    confirmBtn.classList.remove('btn-warning');
                    confirmBtn.classList.add('btn-danger');
                    confirmBtn.onclick = function() { deleteSupplier(deleteSupplierId, deleteSupplierName); };
                        }

                modalEl.modalInstance.show();
            });
        }

        // Delete supplier (no products)
        function openDeleteSupplierModal(id, name) {
            deleteSupplierId = id;
            deleteSupplierName = name;

            $.get('/Suppliers/CheckSupplierProducts/' + id, function(res) {
                var modalEl = document.getElementById('deleteSupplierModal');
                var modalBody = modalEl.querySelector('.modal-body p');
                var confirmBtn = modalEl.querySelector('#btnConfirmDeleteSupplier');

                if (!modalEl.modalInstance) modalEl.modalInstance = new bootstrap.Modal(modalEl);

                if (res.productCount > 0) {
                    modalBody.innerHTML = `This supplier has ${res.productCount} products.<br>
                        You can mark the supplier inactive or delete products first.`;
                    confirmBtn.innerText = "Mark Inactive";
                    confirmBtn.classList.remove('btn-danger');
                    confirmBtn.classList.add('btn-warning');
                    confirmBtn.onclick = function() { markSupplierInactive(deleteSupplierId); };
                } else {
                    modalBody.innerText = "Are you sure you want to delete this supplier?";
                    confirmBtn.innerText = "Delete";
                    confirmBtn.classList.remove('btn-warning');
                    confirmBtn.classList.add('btn-danger');
                    confirmBtn.onclick = function() { deleteSupplier(deleteSupplierId, deleteSupplierName); };
                }

                modalEl.modalInstance.show();
            });
        }


        // Mark supplier inactive
        function markSupplierInactive(id) {
            toggleSupplierActive(id, false);

            var modalEl = document.getElementById('deleteSupplierModal');
            if (modalEl.modalInstance) {
                modalEl.modalInstance.hide();
            }

            showToast("Supplier marked inactive", "warning");

            // reload table so buttons get disabled and row goes dark
            loadSuppliers();
         }


         $('#btnSaveSupplier').click(function() {
            var supplier = {
                Id: parseInt($('#supplierId').val()) || 0,
                Name: $('#Name').val(),
                Email: $('#Email').val(),
                Mobile: $('#Mobile').val(),
                Address: $('#Address').val()
            };

            var url = supplier.Id > 0 ? '/Suppliers/Edit' : '/Suppliers/Create';

            $.ajax({
                type: 'POST',
                url: url,
                data: JSON.stringify(supplier),
                contentType: 'application/json',
                success: function(response){
                    if(response.success){
                        $('#supplierModal').modal('hide');
                        loadSuppliers();

                        // Show toast with name
                        if(supplier.Id > 0){
                            showToast(`Supplier "${supplier.Name}" updated`, "success");
                        } else {
                            showToast(`Supplier "${supplier.Name}" added successfully`, "success");
                        }

                    } else {
                        showToast(response.error || 'Unknown error', 'error');
                    }
                },
                error: function(){
                    showToast('Unexpected error occurred', 'error');
                }
            });
        });


        $('#btnAddSupplier').click(function() {
            openAddSupplierModal();
        });

        // Confirm delete
        $('#btnConfirmDeleteSupplier').click(function() {
            $.ajax({
                url: '/Suppliers/DeleteAjax/' + deleteSupplierId,
                type: 'POST',
                success: function(response) {
                    if (response.success) {
                        $('#row_' + deleteSupplierId).remove();
                        var modalEl = document.getElementById('deleteSupplierModal');
                        if (modalEl.modalInstance) {
                            modalEl.modalInstance.hide();
                        }
                    } else {
                    }
                },
                error: function() {
                }
            });
        });

        // Load all suppliers into table
         function loadSuppliers() {
            $.get('/Suppliers/GetAll', function(data) {
                var tbody = '';
                data.forEach(function(s) {
                    // if inactive → dark row + disabled buttons
                    const rowClass = s.isActive ? '' : 'table-dark';
                    const disabledAttr = s.isActive ? '' : 'disabled';

                    tbody += `<tr id="row_${s.id}" class="${rowClass}">
                                <td>${s.name}</td>
                                <td>${s.email}</td>
                                <td>${s.mobile}</td>
                                <td>${s.address}</td>
                                <td class="text-center">
                                    <div class="form-check form-switch d-flex justify-content-center">
                                        <input class="form-check-input toggleActive" type="checkbox"
                                               ${s.isActive ? 'checked' : ''}
                                               onchange="toggleSupplierActive(${s.id}, this.checked)">
                                    </div>
                                </td>
                                <td>
                                    <button onclick="openEditSupplierModal(${s.id}, '${s.name}', '${s.email}', '${s.mobile}', '${s.address}')"
                                            class="btn btn-sm btn-warning" ${disabledAttr}>Edit</button>
                                    <button onclick="openDeleteSupplierModal(${s.id}, '${s.name}')"
                                            class="btn btn-sm btn-danger" ${disabledAttr}>Delete</button>
                                    <button onclick="showSupplierDetails(${s.id})"
                                            class="btn btn-sm btn-info" ${disabledAttr}>Details</button>
                                </td>
                              </tr>`;
                });
                $('#supplierTable tbody').html(tbody);
            });
        }


        function toggleSupplierActive(id, isActive) {
            $.ajax({
                type: 'POST',
                url: `/Suppliers/ToggleActive/${id}`,
                contentType: 'application/json',
                data: JSON.stringify(isActive),
                success: function(resp) {
                    if(resp.success) {
                        loadSuppliers();
                        showToast(`Supplier ${isActive ? 'activated' : 'deactivated'}`, "success");
                    } else {
                        alert('Failed to update status');
                        loadSuppliers();
                    }
                },
                error: function() {
                    alert('Error updating status');
                    loadSuppliers();
                }
            });
        }

        function deleteSupplier(id, name) {
            $.ajax({
                url: '/Suppliers/DeleteAjax/' + id,
                type: 'POST',
                success: function(response) {
                    if(response.success) {
                        $('#row_' + id).remove();
                        showToast(`Supplier "${name}" deleted`, "success"); 
                    } else {
                        showToast(response.error || "Could not delete supplier", "error");
                    }
                    $('#deleteSupplierModal').modal('hide');
                },
                error: function() {
                    showToast("Unexpected error deleting supplier", "error");
                }
            });
        }


        function showSupplierDetails(supplierId) {
            $.get(`/Suppliers/GetById/${supplierId}`, function(s) {
                $('#detailName').text(s.name);
                $('#detailEmail').text(s.email);
                $('#detailMobile').text(s.mobile);
                $('#detailAddress').text(s.address);
                $('#detailCreatedAt').text(s.createdAt);
                $('#detailCreatedBy').text(s.createdBy || '');
                $('#detailUpdatedAt').text(s.updatedAt || '');
                $('#detailUpdatedBy').text(s.updatedBy || '');
                $('#detailIsActive').prop('checked', s.isActive);

                new bootstrap.Modal(document.getElementById('supplierDetailsModal')).show();
            }).fail(function(xhr){
                alert('Failed to load supplier details.');
                console.error(xhr.responseText);
            });
        }

        function renderSupplierRow(supplier) {
            const inactiveClass = supplier.isActive ? '' : 'table-dark';
            const disabledAttr = supplier.isActive ? '' : 'disabled';

            return `
            <tr id="row_${supplier.id}" class="${inactiveClass}">
                <td>${supplier.name}</td>
                <td>${supplier.email}</td>
                <td>${supplier.mobile}</td>
                <td>${supplier.address}</td>
                <td class="text-center">
                    <input type="checkbox" class="form-check-input toggleActive" ${supplier.isActive ? 'checked' : ''} data-id="${supplier.id}">
                </td>
                <td class="text-center">
                    <button class="btn btn-info btn-sm btnDetails" data-id="${supplier.id}" ${disabledAttr}>Details</button>
                    <button class="btn btn-primary btn-sm btnEdit" data-id="${supplier.id}" ${disabledAttr}>Edit</button>
                    <button class="btn btn-danger btn-sm btnDelete" data-id="${supplier.id}" ${disabledAttr}>Delete</button>
                </td>
            </tr>`;
        }

        function showToast(message, type = "success") {
            const toastEl = document.getElementById('actionToast');
            const toastBody = document.getElementById('toastMessage');

            toastBody.innerText = message;

            // Remove old background classes
            toastEl.classList.remove('text-bg-success', 'text-bg-warning', 'text-bg-danger');

            // Apply color based on type
            switch(type) {
                case "success":
                    toastEl.classList.add('text-bg-success');
                    break;
                case "warning":
                    toastEl.classList.add('text-bg-warning');
                    break;
                case "error":
                    toastEl.classList.add('text-bg-danger');
                    break;
                default:
                    toastEl.classList.add('text-bg-secondary');
            }

            // Show toast with autohide
            const toast = new bootstrap.Toast(toastEl, { delay: 3000, autohide: true });
            toast.show();
        }



        function afterAddSupplier(name) {
            loadSuppliers();
            showToast(`Supplier "${name}" added successfully`, "success");
        }
        function afterEditSupplier(name) {
            loadSuppliers();
            showToast(`Supplier "${name}" updated`, "success");
        }

        // Load suppliers on page load
        $(document).ready(function() {
            loadSuppliers();
        });
    </script>
}

